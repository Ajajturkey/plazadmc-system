@model List<Line.Models.ShortReport>
@{
    ViewBag.Title = T("agencies").ToString();
}

<div class="wrapper wrapper-content animated fadeInRight">
   
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <h5>@T("Country.Report")</h5>
                </div>
                <div class="ibox-content">
                    <div>
                        @{
                            var Years = Model.Select(d => d.Year).Distinct().OrderByDescending(d => d);
                            var agencies = Model.Select(d => new { Id = d.AgencyId, name = d.Name }).Distinct();
                        }
                        <table id="datatabel" class="table table-responsive">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th></th>
                                    @foreach (var item in Years)
                                    {
                                        <th> @item</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var cty in agencies)
                                {
                                    <tr>
                                        <td></td>
                                        <td><a href="@Url.Action("agency", new { AId = cty.Id })">@cty.name</a> </td>
                                        @foreach (var item in Years)
                                        {
                                            <td>
                                                @{
                                                    var Sales = Model.FirstOrDefault(d => d.Name.ToLower() == cty.name.ToLower() && d.Year == item);
                                                    var salesVal = Sales != null ? Sales.Sales : 0;
                                                }
                                                @salesVal.ToString(true)
                                            </td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
@section Scripts {
    @Scripts.Render("~/plugins/chartjs")
    <script src="https://cdn.datatables.net/buttons/1.5.4/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.4/js/buttons.html5.min.js"></script>


    <script>
        $(document).ready(function () {
            $('#datatabel').DataTable({
                "paging": false,
                responsive: {
                    details: {
                        type: 'column',
                        target: 'tr'
                    }
                },
                columnDefs: [{
                    className: 'control',
                    orderable: false,
                    targets: 0
                }],

                dom: 'Bfrtip',
                buttons: [
                    'print', 'excel', 'pdf'
                ]
            });
        });
    </script>
    @*<script type="text/javascript">
        $(document).ready(function () {
              @{
var dictinary = new Dictionary<string, string>();
foreach (var item in agencies)
{
    var value = @Model.FirstOrDefault(d => d.Name.ToLower() == item.name.ToLower() && d.Year == DateTime.Now.Year);
    if (value  == null)
    continue;

                  dictinary.Add(item.name, value != null ? value.Sales.ToString() : "0");
              }
            }

            var barData = {
                labels:@Html.Raw(Json.Encode(dictinary.Keys.AsEnumerable())),
                 datasets: [
                        {
                            label: "@DateTime.Now.Year",
                            backgroundColor: 'rgba(220, 220, 220, 0.5)',
                            pointBorderColor: "#fff",
                            data: @Html.Raw(Json.Encode(dictinary.Values.Select(d=> d)))
                        }
                    ]
            };

            var barOptions = {
                responsive: true
            };


            var ctx2 = document.getElementById("barChart").getContext("2d");
            new Chart(ctx2, { type: 'bar', data: barData, options: barOptions });


            var doughnutData = {
                labels: ["App", "Software", "Laptop"],
                datasets: [{
                    data: [300, 50, 100],
                    backgroundColor: ["#a3e1d4", "#dedede", "#b5b8cf"]
                }]
            };

            var doughnutOptions = {
                responsive: true
            };

            var ctx4 = document.getElementById("doughnutChart").getContext("2d");
            new Chart(ctx4, { type: 'doughnut', data: doughnutData, options: doughnutOptions });

        });
    </script>*@
}



