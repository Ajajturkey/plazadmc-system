@model PagedList.PagedList<Line.Data.Reservations>
@using PagedList.Mvc;
@using Line.Models
@{
    var Filter = (AgencyViewModel)ViewBag.Filter;
    ViewBag.Title = Filter.Agency.AgencyName;
    var Canceled =  (List<Line.Data.Reservations>)ViewBag.Canceled;

    var totaladvance = (decimal)ViewBag.advancePayments;
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-12">
        <h2>
            <b>  @ViewBag.Title - @Filter.Agency.Country</b> <a href="@Url.Action("Agency","Configuration",new { Id = Filter.Agency.ID  })">[@T("Edit")]</a>
        </h2>
    </div>
    <div class="col-lg-12">
        @using (Html.BeginForm())
        {
            <div class="row">

                <div class="col-md-2">

                    <b>@T("File.Status") </b> <br />
                    @Html.DropDownList("FileStatus", Filter.FileStatusList, new { @class = "form-control chosen-select" })
                </div>
                <div class="col-md-2">
                    <b>@T("File.Future") </b> <br />
                    @Html.DropDownList("FileDate", Filter.FileDateList, new { @class = "form-control chosen-select" })
                </div>
                <div class="col-lg-2">
                    <b>@T("custom.date") </b> <br />
                    @Html.CheckBox("Showpayment", new { style = "width:30px;height:30px", @onclick = "toggleDate()" })
                </div>
                <div class="col-lg-4" id="sandbox-container" @if (!Filter.Showpayment) { <text> hidden</text>}>
                    <div class="input-daterange  input-group">
                        <b>@T("Checkout.from") </b> <br />
                        @Html.TextBox("Datefrom", Filter.CheckOutFrom.ToShortDateString(), new { @class = "form-control date", name = "start", autocomplete = "off" })
                        <span class="input-group-addon" style="background-color:#fff"></span>
                        <b>@T("Checkout.to") </b> <br />
                        @Html.TextBox("Dateto", Filter.CheckOutTo.ToShortDateString(), new { @class = "form-control date", name = "end", autocomplete = "off" })
                    </div>
                </div>
                <div class="col-lg-2">
                    <br />
                    <input type="submit" class="btn  btn-info" name="name" value="@("Search")" />
                </div>
                <div class="col-lg-2">
                    <b>@T("Attachment") </b> <br />
                    <a target="_blank" class="btn  btn-success" href="@Url.Action("DownloadAgencyExcel", new { Id = @Filter.Agency.ID})"><i class="fa fa-file-excel-o"></i> @("excel")</a>
                </div>


                @Html.Hidden("CheckOutFrom", Filter.CheckOutFrom)
                @Html.Hidden("CheckOutTo", Filter.CheckOutTo)

            </div>
        }
    </div>
</div>


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5 class="">
                        <a href="@Url.Action("AdvancePayments",new {Id = Filter.Agency.ID })" class="btn btn-danger btn-xs">@T("advance.payments")</a>
                        <a class="btn btn-warning btn-xs" onclick="ToggleAllPayments()">@T("expandpayments")</a>
                    </h5>
                    <div class="ibox-tools">
                        <a class="btn btn-xs btn-primary" target="_blank" href="@Url.Action("Statement",new { Id = Filter.Agency.ID, Statement= "A" })">Statment A</a>
                        <a class="btn btn-xs btn-primary" target="_blank" href="@Url.Action("Statement",new { Id = Filter.Agency.ID , Statement= "B"})">Statment B</a>
                        <a class="btn btn-xs btn-primary" target="_blank" href="@Url.Action("Statement",new { Id = Filter.Agency.ID, Statement= "C" })">Statment C</a>
                    </div>
                </div>

                <div class="ibox-content">
                    <table id="datatabel" class="table table-striped">
                        <thead>
                            <tr>
                                <th> </th>
                                <th>
                                    @T("Id")
                                </th>
                                <th>
                                    @T("Voucher")
                                </th>
                                <th>
                                    @T("Checkin") -  @T("Checkout")
                                </th>
                                <th>
                                    @T("Customer")
                                </th>

                                <th>
                                    @T("Debt")
                                </th>
                                <th>
                                    @T("Payments")
                                </th>
                                <th>
                                    @T("Balance")
                                </th>
                                <th width="100" class="table-inputs"></th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td>
                                    @Model.Sum(d => d.price).ToString(true)
                                </td>
                                <td>
                                    @{ var paid = Model.Sum(d => d.Payments.Sum(p => p.Payment));}
                                    @paid.ToString(true)
                                </td>
                                <td>
                                    @((Model.Sum(d => d.price) - paid).ToString(true))
                                </td>
                                <td class="table-inputs"></td>
                            </tr>
                        </tfoot>

                        <tbody>

                            @foreach (var res in Model)
                            {
                                <tr onclick="togglePayments(@res.ID)">
                                    <td></td>
                                    <td>
                                        @{
                                            var viewclass = "";
                                            switch (res.status)
                                            {
                                                case "Request":
                                                    viewclass = "btn-warning";
                                                    break;
                                                case "Confirmed":
                                                    viewclass = "btn-info";
                                                    break;
                                                case "ReConfirmed":
                                                    viewclass = "btn-success";
                                                    break;
                                                case "Canceled":
                                                    viewclass = "btn-danger";
                                                    break;
                                                case "Completed":
                                                    viewclass = "btn-primary";
                                                    break;
                                                default:
                                                    viewclass = "btn-warning";
                                                    break;
                                            }
                                        }
                                        <a target="_blank" href="@Url.Action("ViewReservations", "Reservations", new { id = res.ID })"><span class="btn btn-xs btn-3d @viewclass">@res.ID</span></a>
                                    </td>
                                    <td width="100">
                                        @res.vocher
                                    </td>
                                    <td>
                                        @res.checkindate.ToFString() - @res.balanceDate.ToFString()
                                    </td>
                                    <td>
                                        @res.GetCustomers()
                                    </td>
                                    <td width="100">
                                        @res.price.ToString(true)
                                    </td>
                                    <td width="100">
                                        @res.Payments.Sum(d => d.Payment).ToString(true)
                                    </td>
                                    <td width="100">
                                        @{ var totalbalance = res.price - res.Payments.Sum(d => d.Payment); }
                                        @(totalbalance.ToString(true))
                                    </td>
                                    <td>

                                        <button type="button" onclick="Payment(@res.ID,@(res.price - res.Payments.Sum(d=> d.Payment)))" class="btn btn-info btn-xs">
                                            <span class="fa fa-usd"></span>
                                        </button>
                                        <a href='@Url.Action("OpenInvoice", "Reservations", new { id = res.ID })' id="Invoice" name="Invoice" class="btn btn-success btn-xs">
                                            <span class="glyphicon glyphicon-file"></span>
                                        </a>
                                    </td>
                                </tr>
                                <tr>
                                    <td></td>
                                    <td colspan="8">
                                        <div id="File-@res.ID" class="payment-row" hidden>
                                            <table class="table">
                                                @*<tr>
                                        <th>@T("id")</th>
                                        <th>@T("type")</th>
                                        <th>@T("date")</th>
                                        <th>@T("note")</th>
                                        <th>@T("total")</th>
                                        <th>@T("balance")</th>
                                        <th>@T("remove")</th>
                                    </tr>*@
                                                @{ var balance = res.price; }
                                                @foreach (var item in res.Payments)
                                                {
                                                    balance = balance - item.Payment;
                                                    <tr class="btn-danger">
                                                        <td>@item.ID</td>
                                                        <td>@item.type</td>
                                                        <td>@item.date.ToFString()</td>
                                                        <td>@item.note</td>
                                                        <td>@item.Payment.ToString(true)</td>
                                                        <td>@balance.ToString(true)</td>
                                                        <td><a class="btn btn-xs btn-danger" onclick="removepayment(@item.ID)"><i class="fa fa-trash"></i></a></td>
                                                    </tr>
                                                }
                                            </table>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>

                    </table>
                    <div class="text-center">
                        @Html.PagedListPager(Model, page => Url.Action("Agency", new { page, Filter.FileStatus, Filter.Showpayment, Filter.FileDate, Filter.CheckOutFrom, Filter.CheckOutTo }))
                    </div>

                    <hr />

                    <table id="canceled" class="table  table-dark">
                        <thead>
                            <tr>
                                <th> </th>
                                <th>
                                    @T("Id")
                                </th>
                                <th>
                                    @T("Voucher")
                                </th>
                                <th>
                                    @T("Checkin") -  @T("Checkout")
                                </th>
                                <th>
                                    @T("Customer")
                                </th>
                                <th>
                                    @T("Debt")
                                </th>
                                <th width="100" class="table-inputs"></th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td>
                                    @((Canceled.Sum(d => d.price) * -1).ToString(true))
                                </td>
                                <td class="table-inputs"></td>
                            </tr>
                        </tfoot>

                        <tbody>

                            @foreach (var res in Canceled)
                            {
                                <tr>
                                    <td></td>
                                    <td>
                                        @{
                                            var viewclass = "";
                                            switch (res.status)
                                            {
                                                case "Request":
                                                    viewclass = "btn-warning";
                                                    break;
                                                case "Confirmed":
                                                    viewclass = "btn-info";
                                                    break;
                                                case "ReConfirmed":
                                                    viewclass = "btn-success";
                                                    break;
                                                case "Canceled":
                                                    viewclass = "btn-danger";
                                                    break;
                                                case "Completed":
                                                    viewclass = "btn-primary";
                                                    break;
                                                default:
                                                    viewclass = "btn-warning";
                                                    break;
                                            }
                                        }
                                        <a target="_blank" href="@Url.Action("ViewReservations", "Reservations", new { id = res.ID })"><span class="btn btn-xs btn-3d @viewclass">@res.ID</span></a>
                                    </td>
                                    <td width="100">
                                        @res.vocher
                                    </td>
                                    <td>
                                        @res.checkindate.ToFString() - @res.balanceDate.ToFString()
                                    </td>
                                    <td>
                                        @res.GetCustomers()
                                    </td>
                                    <td width="100">
                                        @res.price.ToString(true)
                                    </td>
                                   
                                    <td>

                                       
                                        <a href='@Url.Action("OpenInvoice", "Reservations", new { id = res.ID })' id="Invoice" name="Invoice" class="btn btn-success btn-xs">
                                            <span class="glyphicon glyphicon-file"></span>
                                        </a>
                                    </td>
                                </tr>
                                
                            }
                        </tbody>

                    </table>

                    
                </div>
            </div>
        </div>
    </div>
</div>


<div id="Payment" class="modal fade" role="dialog">
    <div class="modal-dialog modal-dialog-sm">
        <div class="modal-content">
            @using (Html.BeginForm("Payment", "accounting"))
            {
                @Html.Hidden("Id")
                @Html.Hidden("AId")
                @Html.Hidden("totalpayment")

                <div class="modal-header btn-info">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title"> <span class="glyphicon glyphicon-send"></span> @T("Insert.Payment") # <span id="FileId"></span></h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg-6">
                            <label>PaymentsValue: </label>
                            <div class="input-group input-group">
                                <span class="input-group-addon"></span>
                                <input type="number" id="PaymentsValue" class="form-control "  max="" name="PaymentsValue" value="0" />
                            </div>
                            <label>Date: </label>
                            <div class="input-group input-group">
                                <span class="input-group-addon"></span>
                                <input type="text" id="date" class="form-control date" name="date" value="@DateTime.Today.ToString("dd.MM.yyyy")" />
                            </div>

                        </div>
                        <div class="col-lg-6">
                            <label>Type: </label>
                            <div class="input-group input-group">
                                <span class="input-group-addon"></span>
                                <select id="type" name="type" class="form-control" onchange="Control(this)">
                                    <option value="Credit Card">@T("Credit Card")</option>
                                    <option value="Cash">@T("Cash")</option>
                                    <option value="Bank Transfer">@T("Bank Transfer")</option>
                                    <option value="Credit Note">@T("Credit Note")</option>
                                    <option value="Draft">@T("Refund")</option>
                                    <option value="Balance">@T("Balance") (@totaladvance.ToString(true))</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <label>Note:  </label>
                    <div class="input-group input-group">
                        <span class="input-group-addon"></span>
                        <textarea rows="5" cols="20" id="description" class="form-control " name="description" value=""></textarea>
                    </div>
                </div>
                <div class="modal-footer text-center">
                    <input type="submit" class="btn btn-info" name="confirm" value="@T("Make.Payment")" />
                    <input type="button" class="btn btn-danger" name="cancel" data-dismiss="modal" value="@T("Close")" />
                </div>
            }
        </div>
    </div>
</div>

@Html.Partial("_ConfirmDelete", "deletedialog")


@section Styles {
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/plugins/wizardStepsStyles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/switcheryStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/nouiSliderStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/plugins/imagecropperStyles")
    @Styles.Render("~/Content/plugins/colorpicker/colorpickerStyles")
    @Styles.Render("~/plugins/select2Styles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/plugins/tagInputsStyles")
    @Styles.Render("~/plugins/duallistStyles")
}


@section Scripts {
    @Scripts.Render("~/plugins/wizardSteps")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/validate")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/ionRange")
    @Scripts.Render("~/plugins/nouiSlider")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/knob")
    @Scripts.Render("~/plugins/imagecropper")
    @Scripts.Render("~/plugins/colorpicker")
    @Scripts.Render("~/plugins/clockpicker")
    @Scripts.Render("~/plugins/dateRange")
    @Scripts.Render("~/plugins/select2")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/tagInputs")
    @Scripts.Render("~/plugins/duallist")


    <script src="~/Scripts/plugins/dataTables/flash.min.js"></script>
    <script src="~/Scripts/plugins/dataTables/jszip.min.js"></script>
    <script src="~/Scripts/plugins/dataTables/vfs_fonts.js"></script>
    <script src="~/Scripts/plugins/dataTables/html5.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {

            $(document).ready(function () {
                //$('#datatabel').DataTable({
                //    responsive: {
                //        details: {
                //            type: 'column',
                //            target: 'tr'
                //        }
                //    },
                //    columnDefs: [{
                //        className: 'control',
                //        orderable: false,
                //        targets: 0
                //    }],
                //    order: [1, 'asc'],
                //    dom: 'Bfrtip',
                //    "paging": false
                   
                //});
            });



            $("#CheckOutFrom").val($("#Datefrom").val());
            $("#CheckOutTo").val($("#Dateto").val());

            $("#Datefrom").change(function () {
                $("#CheckOutFrom").val($("#Datefrom").val());
            });
            $("#Dateto").change(function () {
                $("#CheckOutTo").val($("#Dateto").val());
            });
        });

        function Control(d) {
            if ($(d).val() === "Balance") {

                var ftotal = $("#totalpayment").val();
                var btotal = @totaladvance.ToString().Replace(",",".");
                var total =  btotal;
                if (btotal > ftotal) {
                    total = ftotal;
                }
                $("#PaymentsValue").attr("max", total );
            }
           
        }

        function toggleDate() {
            $("#sandbox-container").toggle();
        }
        function ToggleAllPayments(){
            $(".payment-row").toggle();
        };

        function togglePayments(Id) {
            $("#File-" + Id).toggle();
        }

        $(".chosen-select").chosen()

        $('#sandbox-container .input-daterange').datepicker({
            format: "dd.mm.yyyy",
            daysOfWeekHighlighted: "0,6"
        });
        $('.date').datepicker({
            format: "dd.mm.yyyy",
            daysOfWeekHighlighted: "0,6"
        });

        $('.js-data-example-ajax').select2({
            minimumInputLength: 3,
            ajax: {
                url: '/Admin/Reservations/GetAgencies',
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        q: params.term, // search term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (obj) {
                            return { id: obj.Value, text: obj.Text };
                        })
                    };
                }
            }
        });

        function Payment(id, total) {
            //$("#PaymentsValue").attr("max", total);
            $("#AId").val(id);
            $("#totalpayment").val(total);
            $("#PaymentsValue").val(total);
            $("#FileId").html(id);

            $('#Payment').modal({
                backdrop: 'static',
                keyboard: false
            })
        }


        //$('#PaymentsValue').on('keydown keyup', function (e) {

        //    if (parseInt($(this).val() )> $("#PaymentsValue").attr("max")
        //        && e.keyCode !== 46 // keycode for delete
        //        && e.keyCode !== 8 // keycode for backspace
        //    ) {
        //        e.preventDefault();
        //        $(this).val($("#PaymentsValue").attr("max"));
        //    }
        //});




        function removepayment(id) {

        $('#deletedialog').modal({
            backdrop: 'static',
            keyboard: false
        })
            .one('click', '#delete', function (e) {
                $.ajax({
                    url: "@Url.Action("DeletePayment", "Accounting", new { Area = "Admin" })",
                    type: "Post",
                    data: JSON.stringify({ 'id': id }),
                    dataType: "json",
                    traditional: true,
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (data.success == true) {
                              swal('@T("item.removed")')
                            location.reload();
                        } else {
                            alert("Error occurs on the Database level!");
                        }
                    },
                    error: function () {
                        alert("An error has occured!!!");
                    }
                });
            });
    }
    </script>
}